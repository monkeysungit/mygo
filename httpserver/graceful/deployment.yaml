apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    k8s.sunjc.io/instance: httpserver
    k8s.sunjc.io/name: httpserver
    k8s.sunjc.io/version: 1.0.0
  name: httpserver-deployment
  namespace: httpserver
spec:
  minReadySeconds: 0
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      k8s.sunjc.io/instance: httpserver
      k8s.sunjc.io/name: httpserver
  strategy:
    rollingUpdate:
      maxUnavailable: 1
    type: RollingUpdate
  template:
    metadata:
      labels:
        k8s.sunjc.io/instance: httpserver
        k8s.sunjc.io/name: httpserver
    spec:
      imagePullSecrets:
      - name: cloudnative
      containers:
        - env:
            - name: httpserver-deployment
              valueFrom:
                configMapKeyRef:
                  key: httpport
                  name: myenv
          image: k8s.sunjc.io/httpserver:1.0
          imagePullPolicy: IfNotPresent
          lifecycle:
            preStop:
              exec:
                command:
                  - [ "/bin/sh","-c","httpserver -s quit; while killall -0 httpserver; do sleep 1; done" ]
          livenessProbe:
            failureThreshold: 5
            httpGet:
              path: /healthz
              port: 8080
              scheme: HTTP
            initialDelaySeconds: 10
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          startupProbe:
            failureThreshold: 24
            httpGet:
              host: 192.168.34.2
              path: /healthz
              port: 6443
              scheme: HTTPS
            initialDelaySeconds: 10
            periodSeconds: 10
            timeoutSeconds: 15
          ports:
            - containerPort: 80
              hostPort: 80
              name: http
              protocol: TCP
          readinessProbe:
            failureThreshold: 3
            httpGet:
              path: /healthz
              port: 10254
              scheme: HTTP
            initialDelaySeconds: 10
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          resources:
            limits:
              memory: "200Mi"
              cpu: "700m"
            requests:
              memory: "200Mi"
              cpu: "700m"